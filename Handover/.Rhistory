hab_K[,2]<- c(0,1,2)
hab_K[,3]<- c(0,1500,4200)
View(hab_K)
plot(x=hab_K[,1], y=hab_K[,3], xlab="Suitability %", ylab="K (ind/ha)")
y=1
#creating habitat type layers for RS input
#remember that this is now in EPSG3006 because RS needs it in metres
years<- seq(2013,2023,1)
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.5)& (ens_yr<0.8)]<- 1
ens_yr[(ens_yr>=0.8)]<- 2
plot(ens_yr)
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, NA)
ens_yr[(ens_yr>=0.8)]<- 2
plot(ens_yr)
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
ens_yr[(ens_yr>=0.8)]<- 2
plot(ens_yr)
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
ens_yr[(ens_yr>=0.8)]<- 2
plot(ens_yr)
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
plot(ens_yr)
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
plot(ens_yr)
hist(values(ens_yr))
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
hist(values(ens_yr))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
plot(ens_yr)
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
plot(ens_yr)
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
#creating habitat type layers for RS input
#remember that this is now in EPSG3006 because RS needs it in metres
years<- seq(2013,2023,1)
for(y in 1:length(years)){
print(years[y])
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
#plot(ens_yr)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
#for sweden_finland
ens_yr<- rast(paste("data/RS_swefin/swefin_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
writeRaster(res_yr, paste("data/RS_swefin/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
}
for(y in 1:length(years)){
print(years[y])
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
#plot(ens_yr)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
#for sweden_finland
ens_yr<- rast(paste("data/RS_swefin/swefin_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
writeRaster(ens_yr, paste("data/RS_swefin/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
}
swe_hab_2013<-rast("data/RS_swe/hab_type_2013_1km.tif")
swefin_hab_2013<-rast("data/RS_swefin/hab_type_2013_1km.tif")
par(mfrow=c(1,2))
plot(swe_hab_2013)
plot(swefin_hab_2013)
swe_hab_2023<-rast("data/RS_swe/hab_type_2023_1km.tif")
swefin_hab_2023<-rast("data/RS_swefin/hab_type_2023_1km.tif")
par(mfrow=c(2,2))
plot(swe_hab_2013)
plot(swe_hab_2023)
plot(swefin_hab_2013)
plot(swefin_hab_2023)
par(mfrow=c(1,2))
plot(swefin_hab_2013)
plot(swefin_hab_2023)
hab_K[,3]<- c(0,1000,2500,4500)
hab_K<- as.data.frame(matrix(NA, nrow=3, ncol=3))
colnames(hab_K)<- c("Min_suit", "Hab_type", "K")
hab_K[,1]<- c(0, 0.15, 0.5, 0.8)
#assugning K to habitat type
hab_K<- as.data.frame(matrix(NA, nrow=4, ncol=3))
colnames(hab_K)<- c("Min_suit", "Hab_type", "K")
hab_K[,1]<- c(0, 0.15, 0.5, 0.8)
hab_K[,2]<- c(0,1,2,3)
hab_K[,3]<- c(0,1000,2500,4500)
#creating habitat type layers for RS input
#remember that this is now in EPSG3006 because RS needs it in metres
years<- seq(2013,2023,1)
for(y in 1:length(years)){
print(years[y])
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
#plot(ens_yr)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
#for sweden_finland
ens_yr<- rast(paste("data/RS_swefin/swefin_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
writeRaster(ens_yr, paste("data/RS_swefin/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
}
swefin_hab_2013<-rast("data/RS_swefin/hab_type_2013_1km.tif")
swefin_hab_2023<-rast("data/RS_swefin/hab_type_2023_1km.tif")
par(mfrow=c(1,2))
plot(swefin_hab_2013)
plot(swefin_hab_2023)
y=1
ens_yr[(ens_yr<0.15)]<- 0
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.15)]<- 0
ens_yr[(ens_yr>=0.8)]<- 3
ens_yr[] = ifelse(ens_yr[]>=0.15 & ens_yr[]<0.5, 1, ens_yr[])
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
plot(ens_yr)
#creating habitat type layers for RS input
#remember that this is now in EPSG3006 because RS needs it in metres
years<- seq(2013,2023,1)
for(y in 1:length(years)){
print(years[y])
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.15)]<- 0
ens_yr[(ens_yr>=0.8)]<- 3
ens_yr[] = ifelse(ens_yr[]>=0.15 & ens_yr[]<0.5, 1, ens_yr[])
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
#plot(ens_yr)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
#for sweden_finland
ens_yr<- rast(paste("data/RS_swefin/swefin_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.5)]<- 0
ens_yr[(ens_yr>=0.8)]<- 2
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 1, ens_yr[])
writeRaster(ens_yr, paste("data/RS_swefin/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
}
#creating habitat type layers for RS input
#remember that this is now in EPSG3006 because RS needs it in metres
years<- seq(2013,2023,1)
for(y in 1:length(years)){
print(years[y])
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.15)]<- 0
ens_yr[(ens_yr>=0.8)]<- 3
ens_yr[] = ifelse(ens_yr[]>=0.15 & ens_yr[]<0.5, 1, ens_yr[])
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
#plot(ens_yr)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
#for sweden_finland
ens_yr<- rast(paste("data/RS_swefin/swefin_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.15)]<- 0
ens_yr[(ens_yr>=0.8)]<- 3
ens_yr[] = ifelse(ens_yr[]>=0.15 & ens_yr[]<0.5, 1, ens_yr[])
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
writeRaster(ens_yr, paste("data/RS_swefin/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
}
swefin_hab_2013<-rast("data/RS_swefin/hab_type_2013_1km.tif")
swefin_hab_2023<-rast("data/RS_swefin/hab_type_2023_1km.tif")
par(mfrow=c(1,2))
plot(swefin_hab_2013)
plot(swefin_hab_2023)
env_ext_dup<- read.table("data/sdm_fenno/dynamic_pres_impute_dataset.txt", header=T)
env_ext_dup
rm(env_ext_dup)
pres_points<- read.table("data/sdm_fenno/dynamic_pres_impute_dataset.txt", header=T)
#take only 2013 points?
pres_2013<- pres_points[pres_points$year<=2013,] #1912 observation
env_ext<- read.table("data/sdm_fenno/dynamic_pres_dataset.txt", header=T)
View(env_ext)
swe_en_proj<- rast("data/sdm_swe/ensemble_swe_2013.tif")
presence_ras<- swe_en_proj
swe_en_proj<- rast("data/sdm_swe/ensemble_swe_2013.img")
presence_ras<- swe_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
plot(presence_ras)
View(pres_2013)
#i have presence in lat lon
pres_2013_vect<- vect(pres_2013[,4:5], geom=c("x", "y"), crs=crs(swe_en_proj))
#create a raster to hold species presence data
swe_en_proj<- rast("data/RS_swe/swe_en_EPSG3006_2013_1km.tif")
presence_ras<- swe_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#create a raster to hold species presence data
swe_en_proj<- rast("data/RS_swe/swe_en_EPSG3006_2013_1km.tif")
presence_ras<- swe_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#to use as a reference for creating vector data with WGS84
#since pres data was in latlon
swefin_2013<- rast("data/sdm_swefin/ensemble_swefin_2013.img")
#i have presence in lat lon
pres_2013_vect<- vect(pres_2013[,4:5], geom=c("x", "y"), crs=crs(swefin_2013))
plot(swefin_2013)
pres_2013_proj<- terra::project(pres_2013_vect,"EPSG:3006" )
#extract cell number
extract_2013<- terra::extract(swe_en_proj,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),]
#assign cells 1 and 0 for presence
presence_ras[extract_2013$cell]=1
plot(presence_ras)
sum(values(presence_ras))
sum(values(presence_ras), na.omit=T)
#create a raster to hold species presence data
swefin_en_proj<- rast("data/RS_swefin/swefin_en_EPSG3006_2013_1km.tif")
presence_ras<- swefin_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#extract cell number
extract_2013<- terra::extract(swe_en_proj,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),]
#assign cells 1 and 0 for presence
presence_ras[extract_2013$cell]=1
plot(presence_ras)
#create a raster to hold species presence data
swefin_en_proj<- rast("data/RS_swefin/swefin_en_EPSG3006_2013_1km.tif")
presence_ras<- swefin_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#i have presence in lat lon
pres_2013_vect<- vect(pres_2013[,4:5], geom=c("x", "y"), crs=crs(swefin_2013))
pres_2013_proj<- terra::project(pres_2013_vect,"EPSG:3006" )
#extract cell number
extract_2013<- terra::extract(swefin_en_proj,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),]
#assign cells 1 and 0 for presence
presence_ras[extract_2013$cell]=1
plot(presence_ras)
length(unique(extract_2013$cell))
#create a raster to hold species presence data
swefin_en_proj<- rast("data/RS_swefin/swefin_en_EPSG3006_2013_1km.tif")
presence_ras<- swefin_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#to use as a reference for creating vector data with WGS84
#since pres data was in latlon
swefin_2013<- rast("data/sdm_swefin/ensemble_swefin_2013.img")
plot(swefin_2013)
points(pres_2013_vect)
plot(swefin_en_proj)
points(pres_2013_proj)
#extract cell number
extract_2013<- terra::extract(swefin_en_proj,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #3184
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ]
#assign cells 1 and 0 for presence
presence_ras[extract_2013$cell]=1
plot(presence_ras)
#get it for Sweden only
swe_en_proj<- rast("data/RS_swe/swe_en_EPSG3006_2013_1km.tif")
presence_ras<- swe_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#extract cell numbers
extract_2013<- terra::extract(swe_en_proj,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #3184
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ] #1589
#assign cells 1 and 0 for presence
presence_ras[extract_2013$cell]=1
plot(presence_ras)
writeRaster(presence_ras, "data/RS_swe/initial_dist.tif", overwrite=T)
writeRaster(presence_ras, "data/RS_swefin/initial_dist_1km.tif", overwrite=T)
#create a raster to hold species presence data
swefin_en_proj<- rast("data/RS_swefin/swefin_en_EPSG3006_2013_1km.tif")
presence_ras<- swefin_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
#i have presence in lat lon
pres_2013_vect<- vect(pres_2013[,4:5], geom=c("x", "y"), crs=crs(swefin_2013))
pres_2013_proj<- terra::project(pres_2013_vect,"EPSG:3006" )
#extract cell number
extract_2013<- terra::extract(swefin_en_proj,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #3184
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ] #1589
#assign cells 1 and 0 for presence
presence_ras[extract_2013$cell]=1
plot(presence_ras)
writeRaster(presence_ras, "data/RS_swefin/initial_dist_1km.tif", overwrite=T)
?disagg
#create a 10km version
presence_res_10<- disagg(presence_res, 10)
#create a 10km version
presence_res_10<- disagg(presence_ras, 10)
plot(presence_res_10)
#create a raster to hold species presence data
swefin_en_proj<- rast("data/RS_swefin/swefin_en_EPSG3006_2013_1km.tif")
presence_ras<- swefin_en_proj
presence_ras[!(is.na(presence_ras))]<- 0
presence_res_10<- disagg(presence_ras, 10)
#create a raster to hold species presence data
swefin_en_proj<- rast("data/RS_swefin/swefin_en_EPSG3006_2013_1km.tif")
presence_ras<- swefin_en_proj
presence_res_10<- disagg(presence_ras, 10)
#extract cell number
extract_2013<- terra::extract(presence_res_10,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #3184
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ] #1589
#assign cells 1 and 0 for presence
presence_res_10[!(is.na(presence_res_10))]<- 0
presence_res_10
?aggregate
presence_res_10<- aggregate(presence_ras, 10)
#extract cell number
extract_2013<- terra::extract(presence_res_10,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #3184
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ] #1683
#assign cells 1 and 0 for presence
presence_res_10[!(is.na(presence_res_10))]<- 0
presence_res_10[extract_2013$cell]=1
plot(presence_res_10)
#disaggregate again to 1km?
presence_res_1<- disagg(presence_res_10, 10)
plot(presence_res_1)
presence_res_1
presence_res_10
?focal
?adjacent
SWE<- readRDS("data/gadm/gadm41_SWE_0_pk.rds")
swe_out_proj<- terra::project(SWE, "EPSG:3006")
plot(swe_out_proj, add=T)
?mosaic
#try adding original res with aggregated
presence_res_1<- mosaic(presence_res_10, presence_ras, fun="max")
#try adding original res with aggregated
presence_res_1<- mosaic(presence_res_10, presence_res_1, fun="max")
#disaggregate again to 1km?
presence_res_1<- disagg(presence_res_10, 10)
#try adding original res with aggregated
presence_res_1<- mosaic(presence_ras, presence_res_1, fun="max")
plot(presence_res_1)
presence_ras[!(is.na(presence_ras))]<- 0
presence_ras<- mosaic(presence_ras, presence_res_1, fun="max")
plot(presence_ras)
presence_ras[!(is.na(presence_ras))]<- 0
plot(presence_ras)
plot(presence_res_1)
#try adding original res with aggregated
#disaggregate again to get back to 1km so we can fill in the gaps
presence_res_1<- disagg(presence_res_10, 10)
presence_ras[!(is.na(presence_ras))]<- 0
presence_ras<- mosaic(presence_ras, presence_res_1, fun="max")
plot(presence_ras)
writeRaster(presence_ras, "data/RS_swefin/initial_dist_1km.tif", overwrite=T)
#get it for Sweden only
swe_en_proj<- rast("data/RS_swe/swe_en_EPSG3006_2013_1km.tif")
swe_presence_ras<- swe_en_proj
swe_presence_ras[!(is.na(swe_presence_ras))]<- 0
swe_presence_ras<- resample(presence_ras, swe_presence_ras)
plot(swe_presence_ras)
swe_presence_ras<- swe_en_proj
swe_presence_ras[!(is.na(swe_presence_ras))]<- 0
plot(swe_presence_ras)
?resample
swe_presence_ras<- swe_en_proj
swe_presence_ras[!(is.na(swe_presence_ras))]<- 0
swe_presence_ras<- mask(presence_ras, swe_presence_ras)
swe_presence_ras<- cover(presence_ras, swe_presence_ras)
swe_presence_ras<- resample(presence_ras, swe_presence_ras)
plot(swe_presence_ras)
plot(presence_ras)
presence_ras<- swefin_en_proj
presence_res_10<- aggregate(presence_ras, 5)
presence_res_5<- aggregate(presence_ras, 5)
rm(presence_res_10)
#extract cell number
extract_2013<- terra::extract(presence_res_5,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #2088
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ] #435
#assign cells 1 and 0 for presence
presence_res_5[!(is.na(presence_res_5))]<- 0
presence_res_5[extract_2013$cell]=1
plot(presence_res_5)
#try adding original res with aggregated
#disaggregate again to get back to 1km so we can fill in the gaps
presence_res_1<- disagg(presence_res_5, 5)
presence_ras[!(is.na(presence_ras))]<- 0
presence_ras<- mosaic(presence_ras, presence_res_1, fun="max")
plot(presence_ras)
writeRaster(presence_ras, "data/RS_swefin/initial_dist_1km.tif", overwrite=T)
sum(values(presence_ras))
freq(values(presence_ras))
#extract cell number
extract_2013<- terra::extract(swe_presence_res_5,pres_2013_proj, cells=T)
swe_presence_ras<- swe_en_proj
swe_presence_res_5<- aggregate(swe_presence_ras, 5)
#extract cell number
extract_2013<- terra::extract(swe_presence_res_5,pres_2013_proj, cells=T)
extract_2013<- extract_2013[complete.cases(extract_2013),] #2498
extract_2013_dup<- extract_2013[!duplicated(extract_2013[c('cell')]), ] #781
#assign cells 1 and 0 for presence
swe_presence_res_5[!(is.na(swe_presence_res_5))]<- 0
swe_presence_res_5[extract_2013$cell]=1
plot(swe_presence_res_5)
#try adding original res with aggregated
#disaggregate again to get back to 1km so we can fill in the gaps
swe_presence_res_1<- disagg(swe_presence_res_5, 5)
swe_presence_ras[!(is.na(swe_presence_ras))]<- 0
swe_presence_ras<- mosaic(swe_presence_ras, swe_presence_res_1, fun="max")
plot(swe_presence_ras)
writeRaster(swe_presence_ras, "data/RS_swefin/initial_dist_1km.tif", overwrite=T)
writeRaster(swe_presence_res_5, "data/RS_swefin/initial_dist_5km.tif", overwrite=T)
writeRaster(presence_res_5, "data/RS_swefin/initial_dist_5km.tif", overwrite=T)
dev.off()
plot(presence_res_5)
FIN<- readRDS("data/gadm/gadm41_FIN_0_pk.rds")
swfin<- terra::union(SWE, FIN)
swefin_proj<- terra::project(swefin, "EPSG:3006")
swfin_proj<- terra::project(swfin, "EPSG:3006")
plot(presence_res_5, col=c("white", "red"))
plot(swfin_proj, add=T)
plot(swe_presence_res_5, col=c("white", "red"))
plot(swe_out_proj, add=T)
par(mfrow=c(1,2))
plot(swe_presence_res_5, col=c("white", "red"))
plot(swe_out_proj, add=T)
plot(presence_res_5, col=c("white", "red"))
plot(swfin_proj, add=T)
?writeRaster
#write to txt file
writeRaster(swe_presence_ras, "data/RS_swefin/initial_dist_1km.txt", NAflag=-99, overwrite=TRUE)
#write to txt file
writeRaster(swe_presence_ras, "data/RS_swefin/initial_dist_1km.asc", NAflag=-99, overwrite=TRUE)
writeRaster(swe_presence_ras, "data/RS_swe/initial_dist_1km.tif", overwrite=T)
#write to txt file
writeRaster(swe_presence_ras, "data/RS_swe/initial_dist_1km.asc", NAflag=-99, overwrite=TRUE)
writeRaster(swe_presence_res_5, "data/RS_swe/initial_dist_5km.tif", overwrite=T)
writeRaster(swe_presence_ras_5, "data/RS_swe/initial_dist_5km.asc", NAflag=-99, overwrite=TRUE)
writeRaster(swe_presence_res_5, "data/RS_swe/initial_dist_5km.tif", overwrite=T)
writeRaster(swe_presence_res_5, "data/RS_swe/initial_dist_5km.asc", NAflag=-99, overwrite=TRUE)
writeRaster(presence_ras, "data/RS_swefin/initial_dist_1km.asc", NAflag=-99, overwrite=TRUE)
writeRaster(presence_ras_5, "data/RS_swefin/initial_dist_5km.asc", NAflag=-99, overwrite=TRUE)
writeRaster(presence_res_5, "data/RS_swefin/initial_dist_5km.asc", NAflag=-99, overwrite=TRUE)
#creating habitat type layers for RS input
#remember that this is now in EPSG3006 because RS needs it in metres
years<- seq(2013,2023,1)
for(y in 1:length(years)){
print(years[y])
#for sweden
ens_yr<- rast(paste("data/RS_swe/swe_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.15)]<- 0
ens_yr[(ens_yr>=0.8)]<- 3
ens_yr[] = ifelse(ens_yr[]>=0.15 & ens_yr[]<0.5, 1, ens_yr[])
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
#plot(ens_yr)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
writeRaster(ens_yr, paste("data/RS_swe/hab_type_", years[y], "_1km.asc",
sep=""), NAflag=-99, overwrite=TRUE)
#for sweden_finland
ens_yr<- rast(paste("data/RS_swefin/swefin_en_EPSG3006_", years[y],
"_1km.tif", sep=""))
ens_yr[(ens_yr<0.15)]<- 0
ens_yr[(ens_yr>=0.8)]<- 3
ens_yr[] = ifelse(ens_yr[]>=0.15 & ens_yr[]<0.5, 1, ens_yr[])
ens_yr[] = ifelse(ens_yr[]>=0.5 & ens_yr[]<0.8, 2, ens_yr[])
writeRaster(ens_yr, paste("data/RS_swefin/hab_type_",
years[y], "_1km.tif", sep=""), overwrite=T)
writeRaster(ens_yr, paste("data/RS_swefin/hab_type_", years[y], "_1km.asc",
sep=""), NAflag=-99, overwrite=TRUE)
}
library(Rcpp)
library(devtools)
library(Rdpack)
